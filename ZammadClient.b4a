Build1=Default,it.ipersoft.zammad
File1=LayoutLogin.bal
FileGroup1=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=sql
Library3=b4xencryption
Library4=randomaccessfile
Library5=appcompat
Library6=okhttp
Library7=okhttputils2
Library8=json
Library9=ime
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~SetApplicationAttribute(android:theme, "@style/MyAppTheme")~\n~~\n~CreateResource(values, theme.xml,~\n~<resources>~\n~    <style name="MyAppTheme" parent="@style/Theme.AppCompat.Light.DarkActionBar">~\n~        <item name="colorPrimary">#FF0000</item>~\n~        <item name="colorPrimaryDark">#FF3232</item>~\n~        <item name="colorAccent">#FFA726</item>~\n~        <item name="windowNoTitle">true</item>~\n~        <item name="windowActionBar">false</item>~\n~~\n~    </style>~\n~</resources>~\n~)
Module1=Starter
Module2=KeyValueStore
Module3=cUser
Module4=cConnection
Module5=cLink
Module6=cMy
Module7=cOrg
Module8=cOrgs
NumberOfFiles=1
NumberOfLibraries=9
NumberOfModules=8
Version=9
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Zammad Client
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
	#Extends: android.support.v7.app.AppCompatActivity
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Public gUser As cUser
	Public gConnection As cConnection
	Public gLink As cLink
	Public gMy As cMy
	Public gOrgs As cOrgs
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Dim kC As KeyValueStore
	Private OKButton As ACButton
	Private PasswordText As ACEditText
	Private ServerText As ACEditText
	Private UsernameText As ACEditText
	Private kIME As IME
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	gMy.Initialize
	kC=Starter.kConfig
	Activity.LoadLayout("LayoutLogin")
	LoadLoginValues
	PasswordText.InputType=Bit.Or(PasswordText.InputType, 0x00000080)
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub


Sub OKButton_Click
	kIME.HideKeyboard
	SaveLoginValues
	
	gConnection.Initialize
	gConnection.URL=ServerText.Text
	gConnection.Username=UsernameText.Text
	gConnection.Password=PasswordText.Text
	
	gLink.Initialize
	gLink.c=gConnection
	gLink.m=gMy
	
	ProgressDialogShow("Connessione in corso ...")
	Wait For (Login) Complete (Success As Boolean)	
	ProgressDialogHide
	If Success=True Then
		Msgbox (gUser.firstname & " " & gUser.lastname,gUser.login)
		Else
		Msgbox("Error","")
	End If
	If Success=True Then
		ProgressDialogShow("Caricamento aziende ...")
		Wait For (LoadOrgs) Complete (Success As Boolean)
		ProgressDialogHide
		If Success=True Then
				Msgbox(gOrgs.org(gUser.organization_id).name,"OK")
			Else
				Msgbox(LastException,"")
		End If
	End If
End Sub
Sub LoadLoginValues
	UsernameText.Text=kC.GetDefault("LOGIN","")
	ServerText.Text=kC.GetDefault("SERVER","")
End Sub
Sub SaveLoginValues
	kC.Put("LOGIN",UsernameText.Text)
	kC.Put("SERVER",ServerText.Text)
End Sub

Sub Login As ResumableSub
	Dim j As HttpJob
	Dim sJson As String
	
	j.Initialize("",Me)
	j=gLink.GetUser(j)
	
	Wait For (j) JobDone(j As HttpJob)
	If j.Success=False Then
		Return False
		j.Release
	Else
		sJson=j.GetString
		j.Release
		gUser.Initialize
		Return gUser.LoadJson(sJson)
	End If	
End Sub
Sub LoadOrgs As ResumableSub
	Dim j As HttpJob
	Dim sJson As String
	
	j.Initialize("",Me)
	j=gLink.GetOrgs(j)
	
	Wait For (j) JobDone(j As HttpJob)
	If j.Success=False Then
		Return False
		j.Release
	Else
		sJson=j.GetString
		j.Release
		gOrgs.Initialize
		Return gOrgs.LoadJson(sJson)
	End If
End Sub
